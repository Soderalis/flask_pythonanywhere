name: Deploiement sur PythonAnywhere

# Doc sur les github actions:
# https://docs.github.com/fr/actions/writing-workflows/quickstart
# Creation des variables "secrets"
# https://docs.github.com/fr/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-a-repository
# Doc de l'API PythonAnywhere pour y uploader des fichiers, accéder à son token, etc :
# https://help.pythonanywhere.com/pages/API


on:
  push:
    branches:
      - main  # Branche sur laquelle un Push de code va déclencher l'action

jobs:
  deploy:
    runs-on: ubuntu-latest  # machine virtuelle que gihbut doit temporairement déployer pour exécuter le workflow

    steps:
      - name: Récupération du code depuis le dépôt github
        uses: actions/checkout@v2    # action pré-établie

      - name: Envoi du code sur PythonAnywhere
        env:
          # récupérer le token et le username sur https://www.pythonanywhere.com/user/{TON-NOM-ICI}/account/#api_token
          # et utiliser cette doc pour les mettre dans github : 
          # https://docs.github.com/fr/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-a-repository
          API_TOKEN: ${{ secrets.MON_TOKEN_A_MOI }}  
          USERNAME: ${{ secrets.MON_USERNAME }}
        run: |
          echo "Envoi du code vers PythonAnywhere"
          curl -v -X POST "https://www.pythonanywhere.com/api/v0/user/$USERNAME/files/path/home/$USERNAME/mysite/flask_app.py" \
          -H "Authorization: Token $API_TOKEN" \
          -F "content=@./app.py"  # nom du fichier sur le dépôt Git à envoyer, qui sera copié sur pythonanywhere sous le nom de flask_app.py
          # utilise le endpoint pythonanywhere /api/v0/user/{username}/files/path{path}
          # cf : https://help.pythonanywhere.com/pages/API#apiv0userusernamefilessharingpathpath
          # Après l'exécution de cette étape le fichier devrait s'être actualisé dans Pythonanywhere,
          # c'est à dire à cet endroit : https://www.pythonanywhere.com/user/{TON_NOM_ICI}/files/home/{TON_NOM_ICI}/mysite/flask_app.py

      - name: Relancer l'application Flask sur PythonAnywhere après la modification du code
        env:
          API_TOKEN: ${{ secrets.MON_TOKEN_A_MOI }}
          USERNAME: ${{ secrets.MON_USERNAME }}
        run: |
          echo "Relancer l'application FLask sur PythonAnywhere"
          curl -X POST "https://www.pythonanywhere.com/api/v0/user/$USERNAME/webapps/$USERNAME.pythonanywhere.com/reload/" \
          -H "Authorization: Token $API_TOKEN"
          # Utilise ce endpoint : /api/v0/user/{username}/webapps/{domain_name}/reload/
          # cf https://help.pythonanywhere.com/pages/API#apiv0userusernamewebappsdomain_namereload
          
          
          
